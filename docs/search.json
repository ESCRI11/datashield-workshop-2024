[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DataSHIELD Workshop",
    "section": "",
    "text": "Introduction\nThis website has been created to host the materials and exercises for the Advanced Users’ DataSHIELD Workshop, hosted at the Center for Mathematics of the University of Bonn Thursday 26th September 2024.\nOn it you will find reading materials, setup tutorials, the workshop indications and practical exercises.\n\n\nGetting started\nBefore the workshop we suggest the atendants to take a look at the “Environment setup” and “Get up to speed” sections. This way they will have their computers with the right software installed to follow the workshop.\nDue the nature of this workshop, the attendants are expected to have some notions of R package development, to cover the basics we included a section titled “R packages 101”, if you are not familiar with R package development please take a look before the workshop.\n\n\nSchedule\nTo be delivered.\n\n\nAcknowledgements\nThis work is funded by XXX and XXX. Materials developed by Juan R. González (ISGlobal) and Xavier Escribà Montagut (BigOmics Analytics SA).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "env_setup.html",
    "href": "env_setup.html",
    "title": "Environment setup",
    "section": "",
    "text": "R packages\nIn order to develop, test and push our new DataSHIELD packages, we will require the following R packages to be installed:",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Environment setup</span>"
    ]
  },
  {
    "objectID": "env_setup.html#install-guide",
    "href": "env_setup.html#install-guide",
    "title": "Environment setup",
    "section": "Install guide",
    "text": "Install guide\nWhen using R, we are used to installing packages with the handy install.packages() function. However, by default it uses the CRAN repository, which does not contain all the required packages. For that reason we provide a quick code snippet to install all the required packages:\n\n# Install DSLite\ninstall.packages(\"DSLite\")\n\n# Install DSI\ninstall.packages(\"DSI\")\n\n# Install dsBase\ninstall.packages(\n    'dsBase',\n    repos=c(\n        getOption('repos'),\n        'http://cran.datashield.org'\n    ),\n    dependencies=TRUE\n)\n\n# Install dsBaseClient\ninstall.packages(\n    'dsBaseClient',\n    repos=c(\n        getOption('repos'),\n        'http://cran.datashield.org'\n    ),\n    dependencies=TRUE\n)\n\nWith that, your environment will be ready to take on the workshop. Nevertheless, please read the next sessions to familiarize with R package development if you are not already.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Environment setup</span>"
    ]
  },
  {
    "objectID": "up_2_speed.html",
    "href": "up_2_speed.html",
    "title": "Get up to speed",
    "section": "",
    "text": "Developing your first R package\nDuring the workshop it will be assumed that the attendats have already prior knowledge about building a regular R package. If that was not the case, we provide some useful links to prepare in advance, as with the environment setup, feel free to contact the authors before the workshop to solve any doubts.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Get up to speed</span>"
    ]
  },
  {
    "objectID": "up_2_speed.html#developing-your-first-r-package",
    "href": "up_2_speed.html#developing-your-first-r-package",
    "title": "Get up to speed",
    "section": "",
    "text": "R packages\nusethis package\nroxygen2\n\n\n\n\n\n\n\nTip\n\n\n\nIf you are not confident in your basic R package building skills, we suggest creating your first package before the workshop.\nA good exercise would be to use the usethis package to setup the basic R package structure, create a simple helloWorld() function and document it using roxygen2.\nHere, you can see how that would looke like once finished. REPO de resultats",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Get up to speed</span>"
    ]
  },
  {
    "objectID": "up_2_speed.html#footnotes",
    "href": "up_2_speed.html#footnotes",
    "title": "Get up to speed",
    "section": "",
    "text": "From Xavier Escribà↩︎",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Get up to speed</span>"
    ]
  },
  {
    "objectID": "1-datashield-packages-structure.html",
    "href": "1-datashield-packages-structure.html",
    "title": "1. DataSHIELD packages structure",
    "section": "",
    "text": "convencions tipiques datashiel\nparlar que en general escriurem funcions ds.XX al client i la seva part respectiva al servidor es diura XXDS, doncs en general es normal que una funcio del client tingui com objectiu cridar una altra funcio en particular del servidor, sense ser aixo una regla dor",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>1. DataSHIELD packages structure</span>"
    ]
  },
  {
    "objectID": "1-datashield-packages-structure.html#dsi-communicating-from-client-to-server",
    "href": "1-datashield-packages-structure.html#dsi-communicating-from-client-to-server",
    "title": "1. DataSHIELD packages structure",
    "section": "DSI: Communicating from client to server",
    "text": "DSI: Communicating from client to server\nNow that we understand why two packages are required, let’s see which tool we have to perform communications between them. The tool that we will use is called DSI, short for “DataSHIELD Interface”. This tool will allow us to send queries from the packages on the client to the server ones, as well as recieve the server response with the results that we want to use or show the the researcher.\n\n\n\n\n\n\nNote\n\n\n\nThe DSI package is also responsible for creating connections to the server (datashield.login), handling workspaces (datashield.workspaces) and many other stuff, this is not connected to package development.\n\n\n\nCommunication types\nWith DSI there are two different types of communications we can perform, one telling the server to assign the result of a function to a variable, the other telling the server to return the result of a function. It is important to notice that not any function can be used; we, as package developers, will develop a set of functions on the server package and each of them will only be available to be used one way or another, therefore, this information will be specified on the server package (see XXX).\nexplicar que aquestes funcions es fan servir al paquet del client per comunicarse amb el servidor\n\nAssign functions\nficar exemple de codi DSI::assign etc i explicar doncs que es correra la funcio XX i sassignara el valor a la variable Y AL servidor\n\n\nAggregate functions\nlo mateix per dir que els resultats els podem assignar a una variable al CLIENT, crec que sentendra facil\n\n\nDATASHIELD file\nexplicar que hi ha el datashiel file al paquet del servidor on especificarem quina funcio fa que, ficar alguna especie de ascii folder tree de un paquet tipic de R per explicar on va exactament\n\n\n\nExercisi 1\npunt 1. crear un nou paquet de R que es digui dsClient que tingui una funcions, una que es diu ds.assignString, que cride una funcio assign del servidor que es diu assignStringDS\npunt 2. crear un nou paquet de R que es diui dsServer que tingui una funcio que rep una variable i la retorna que es diu assignStringDS\nfer code along de tot aixo + tindre un repo amb solucio exercisi 1, 2, etc,\nara ia tenim el nostre primer paquet, com el testejem? aja punt 2. dsLite, testing packages locally",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>1. DataSHIELD packages structure</span>"
    ]
  },
  {
    "objectID": "2-datashield-filters.html",
    "href": "2-datashield-filters.html",
    "title": "2. DataSHIELD filters",
    "section": "",
    "text": "Options slot of an R package\nFilter values are only available on the server, as we do not want the analysts to be able to manipulate them, just the data owners. For that reason they are defined on the server packages. More precisely they are defined on the DESCRIPTION file of the R package. This file typically contains information about the author of the package, which dependencies it has, the licensing… more precisely these. However, this file can also contain additional metadata, this feature is what is used to declare filters with their correspondent default values on a DataSHIELD package. Take a look at the dsBase DESCRIPTION file for example.\nNow let’s continue by checking how to access those values within our package functions.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>2. DataSHIELD filters</span>"
    ]
  },
  {
    "objectID": "2-datashield-filters.html#accessing-a-filter-value",
    "href": "2-datashield-filters.html#accessing-a-filter-value",
    "title": "2. DataSHIELD filters",
    "section": "Accessing a filter value",
    "text": "Accessing a filter value\nIn order to retrieve the value of a filter on our package functions we will use the getOption function. If we want to retrieve the value of the my.new.filter filter, we will do:\n\ngetOption(\"my.new.filter\")\n\n\n\n\n\n\n\nNote\n\n\n\nIf we try to retrieve a value of an option that is not defined, it will return NULL, this can be convenient to handle exceptions.\n\n\nFollowing that we can see that if we want to use a filter from dsBase, we just have to take a look at the available ones and use them:\n\ngetOption(\"default.nfilter.glm\")\n\nAlso if we define our own filter (on our package DESCRIPTION file):\n\nOptions:\n    nice.filter=5\n\n\n\n\n\n\n\nFurther info\n\n\n\n\n\nHere we see that the filter contains a numeric variable. However they are not limited to that, they can also contain strings and other R data types.\n\nOptions:\n    even.nicer.filter=\"hello\"\n\n\n\n\nWe retrieve it by:\n\ngetOption(\"nice.filter\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>2. DataSHIELD filters</span>"
    ]
  },
  {
    "objectID": "2-datashield-filters.html#exercise-2",
    "href": "2-datashield-filters.html#exercise-2",
    "title": "2. DataSHIELD filters",
    "section": "Exercise 2",
    "text": "Exercise 2\nWith this new information, we should be able now to upgrade the server package we created on Exercise 1.\nfer que implementin un filter que es digui “xxxx” i que fasi algo amb lo que ia han fet al exercisi 1.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>2. DataSHIELD filters</span>"
    ]
  },
  {
    "objectID": "3-datashield-disclosure-traps.html",
    "href": "3-datashield-disclosure-traps.html",
    "title": "3. DataSHIELD disclosure traps",
    "section": "",
    "text": "We",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>3. DataSHIELD disclosure traps</span>"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>About</span>"
    ]
  }
]